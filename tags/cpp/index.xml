<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cpp on gReen</title><link>https://green-21.github.io/tags/cpp/</link><description>Recent content in cpp on gReen</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Mon, 04 Dec 2023 21:44:20 +0900</lastBuildDate><atom:link href="https://green-21.github.io/tags/cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>dx11로 테트리스를 만들어보자자</title><link>https://green-21.github.io/posts/study/%ED%85%8C%ED%8A%B8%EB%A6%AC%EC%8A%A4%EB%A5%BC%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90/</link><pubDate>Mon, 04 Dec 2023 21:44:20 +0900</pubDate><guid>https://green-21.github.io/posts/study/%ED%85%8C%ED%8A%B8%EB%A6%AC%EC%8A%A4%EB%A5%BC%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90/</guid><description>공부한 dx11을 가지고 게임을 만들어보자</description></item><item><title>C++ std library 시리즈</title><link>https://green-21.github.io/posts/cppstdlib/title/</link><pubDate>Sat, 02 Sep 2023 23:51:06 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/title/</guid><description>C++ 표준 라이브러리 시리즈 개요과 목차</description></item><item><title>17. unordered_set: 해시를 이용한 set</title><link>https://green-21.github.io/posts/cppstdlib/unordered-set/</link><pubDate>Wed, 30 Aug 2023 17:16:28 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/unordered-set/</guid><description>hash를 이용해서 더 효율적으로 접근 연산을 수행하는 unordered_set 컨테이너 정리</description></item><item><title>15. 사전형 컨테이너 - map, multimap</title><link>https://green-21.github.io/posts/cppstdlib/map/</link><pubDate>Tue, 29 Aug 2023 18:02:31 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/map/</guid><description>key와 value 쌍을 저장하는 map, multimap에 대한 정리</description></item><item><title>14. 집합 컨테이너 - set, multiset</title><link>https://green-21.github.io/posts/cppstdlib/set/</link><pubDate>Tue, 29 Aug 2023 13:51:37 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/set/</guid><description>집합을 위한 컨테이너 set과 중복을 포함하는 multiset에 대한 정리</description></item><item><title>12. deque: 끝단에서 빠른 자료구조</title><link>https://green-21.github.io/posts/cppstdlib/deque/</link><pubDate>Mon, 28 Aug 2023 02:01:01 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/deque/</guid><description>이중 큐라고 불리는 deque를 구현한 컨테이너 deque에 대한 정리</description></item><item><title>11. list: 이중 연결리스트 컨테이너</title><link>https://green-21.github.io/posts/cppstdlib/list/</link><pubDate>Sun, 27 Aug 2023 21:27:15 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/list/</guid><description>이중 연결리스트 컨테이너 list에 대한 정리</description></item><item><title>10. forward_list: 단일 연결리스트 컨테이너</title><link>https://green-21.github.io/posts/cppstdlib/forward-list/</link><pubDate>Sun, 27 Aug 2023 01:10:43 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/forward-list/</guid><description>어느 위치든 삽입과 삭제를 빠르게 할 수 있는 연결리스트의 컨테이너 중 단일 연결리스트 forward_list에 대한 정리</description></item><item><title>9. insert vs emplace vs push</title><link>https://green-21.github.io/posts/cppstdlib/insertion/</link><pubDate>Sun, 27 Aug 2023 00:52:58 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/insertion/</guid><description>삽입 메서드 insert, emplace, push의 차이</description></item><item><title>8. vector: 가변 길이 배열 컨테이너</title><link>https://green-21.github.io/posts/cppstdlib/vector/</link><pubDate>Fri, 25 Aug 2023 18:01:35 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/vector/</guid><description>동적 배열을 사용하는 컨테이너 vector에 대한 정리</description></item><item><title>7. array: 정적 배열 컨테이너</title><link>https://green-21.github.io/posts/cppstdlib/array/</link><pubDate>Wed, 23 Aug 2023 00:47:13 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/array/</guid><description>정적 배열 컨테이너 array에 대한 소개</description></item><item><title>6. Iterators - 접근 인터페이스</title><link>https://green-21.github.io/posts/cppstdlib/iterator/</link><pubDate>Mon, 21 Aug 2023 19:33:36 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/iterator/</guid><description>자료구조와 알고리즘의 의존 관계를 해결한 이터레이터 패턴에 대한 정리</description></item><item><title>5. Allocators - 컨테이너의 동적 할당과 해제</title><link>https://green-21.github.io/posts/cppstdlib/allocator/</link><pubDate>Mon, 21 Aug 2023 16:40:03 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/allocator/</guid><description>컨테이너의 메모리 할당과 해제</description></item><item><title>3. pair: 두 타입을 묶는 구조체</title><link>https://green-21.github.io/posts/cppstdlib/pair/</link><pubDate>Mon, 21 Aug 2023 13:40:03 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/pair/</guid><description>두 타입을 묶어서 사용할 수 있는 구조체 pair에 대한 정리.</description></item><item><title>2. 훑어보기</title><link>https://green-21.github.io/posts/cppstdlib/outline/</link><pubDate>Sun, 20 Aug 2023 22:09:49 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/outline/</guid><description>std에 대해 전반적으로 살펴본다.</description></item><item><title>1. STL vs C++ std - 이름에 관한 이야기</title><link>https://green-21.github.io/posts/cppstdlib/history/</link><pubDate>Wed, 02 Aug 2023 23:51:06 +0900</pubDate><guid>https://green-21.github.io/posts/cppstdlib/history/</guid><description>C++ std 컨테이너를 부르는 이름과 그에 대한 역사 정리</description></item></channel></rss>